@model DSE.DataAccess.Models.Source
@using DSE.App.Helpers
@using System.Data;
@{
    ViewBag.Title = "Data Sources";
}
<div class="page-head">
    <ol class="breadcrumb">
        <li><a href="@Url.Action("Index","Source")">Data Sources</a></li>
        <li><a href="#">@Model.SourceName </a></li>
        <li class="active"><a href="#"> Import File </a></li>
    </ol>
</div>
<div class="main-content container-fluid">
    <div class="row">
        @using (Html.BeginForm("ExcelConfig", "Source", FormMethod.Post, new { enctype = "multipart/form-data", @class = "form-horizontal group-border-dashed" }))
        {
        <!--Responsive table-->
            <div class="col-sm-12">
                <div class="panel panel-default ">
                    @*<div class="panel-heading panel-heading-divider">Import Excel <span class="panel-subtitle">Upload source file to validate & import</span></div>*@
                    <div class="panel-body">
                        @Html.AntiForgeryToken()
                        @Html.HiddenFor(model => model.SourceId)
                        @Html.HiddenFor(model => model.ClientId)
                        @Html.HiddenFor(model => model.CreateBy)
                        @Html.HiddenFor(model => model.UpdateBy)
                        @Html.HiddenFor(model => model.SourceType)
                        @Html.HiddenFor(model => model.Source_ServerName)
                        @Html.HiddenFor(model => model.Source_Server_Username)
                        @Html.HiddenFor(model => model.Source_Server_Password)
                        @Html.HiddenFor(model => model.Source_Server_Salt)
                        @Html.HiddenFor(model => model.Source_Server_Port)
                        @Html.HiddenFor(model => model.Source_Server_DatabaseName)
                        @Html.HiddenFor(model => model.Is_Scheduled)
                        @Html.HiddenFor(model => model.Schedule_Start_Time)
                        @Html.HiddenFor(model => model.Schedule_Interval)
                        @Html.HiddenFor(model => model.Is_Active)
                        @Html.HiddenFor(model => model.UpdateDate)
                        @Html.HiddenFor(model => model.CreateDate)
                        @Html.HiddenFor(model => model.Source_Server_FilePath)
                        <div class="form-group hide">
                            @Html.LabelFor(model => model.SourceName, htmlAttributes: new { @class = "control-label col-md-3" })
                            <div class="col-sm-6">
                                @Html.EditorFor(model => model.SourceName, new { htmlAttributes = new { @class = "form-control", @readonly = "readonly" } })
                                @Html.MyValidationMessageFor(model => model.SourceName)
                            </div>
                        </div>
                        <div class="form-group">
                            <label class="col-sm-3 control-label">Upload an excel File</label>
                            <div class="col-sm-6">
                                <input type="file" name="file" id="file" data-multiple-caption="{count} files selected" class="inputfile">
                                <label for="file" class="btn-default"> <i class="mdi mdi-upload"></i><span>Browse files...					</span></label>
                                <input type="submit" value="Upload & Import" class="btn btn-primary" />
                            </div>
                        </div>
                        @*<div class="form-group">
                            <div class="col-sm-6 col-md-offset-3">
                                <input type="submit" value="Upload & Import" class="btn btn-primary" />
                            </div>
                        </div>*@
                        @*@if (ViewBag.Edit != null)
                        {
                            if (!ViewData.ModelState.IsValid)
                            {
                                <div role="alert" class="alert alert-danger alert-dismissible">
                                    <button type="button" data-dismiss="alert" aria-label="Close" class="close"><span aria-hidden="true" class="mdi mdi-close"></span></button><span class="icon mdi mdi-close-circle-o"></span><strong>Danger!</strong>@Html.ValidationSummary(true, "", new { @class = "text-danger" })
                                </div>
                            }
                        }*@
                        @if (ViewBag.SuccessMessage != null && ViewBag.SuccessMessage.Length > 0)
                        {
                            <div role="alert" class="alert alert-success alert-icon alert-icon-border alert-dismissible">
                                <div class="icon"><span class="mdi mdi-check"></span></div>
                                <div class="message">
                                    <button type="button" data-dismiss="alert" aria-label="Close" class="close"><span aria-hidden="true" class="mdi mdi-close"></span></button><strong>Good!</strong> @ViewBag.SuccessMessage.
                                </div>
                            </div>
                            @*<div class="form-group">
                                <div class="col-sm-6 col-md-offset-3">
                                    @Html.ActionLink("Go to Mapping", "ExcelMapping", new { id = Model.SourceId }, new { @class = "btn btn-primary" })
                                </div>
                            </div>*@
                        }
                        @if (ViewBag.ErrorMessage != null && ViewBag.ErrorMessage.Length > 0)
                        {
                            <div role="alert" class="alert alert-danger alert-icon alert-icon-border alert-dismissible">
                                <div class="icon"><span class="mdi mdi-check"></span></div>
                                <div class="message">
                                    <button type="button" data-dismiss="alert" aria-label="Close" class="close"><span aria-hidden="true" class="mdi mdi-close"></span></button><strong>No!</strong> @ViewBag.ErrorMessage.
                                </div>
                            </div>                            

                        }
                    </div>
                </div>
            </div>
        }
        <div class="col-sm-12">
            <div class="panel panel-default ">
                @{
                    string updateDate = Model.UpdateDate?.ToString("MMM dd, yyyy hh:mm:ss tt");
                }
                <div class="panel-heading panel-heading-divider">Current Imported Data<span class="panel-subtitle"> Last import time : @updateDate  </span></div>
                <div class="panel-body">
                    @if (Model.CurrentData != null)
                    {
                        foreach (DataTable table in Model.CurrentData)
                        {
                            <div style="width:100%; overflow-x:scroll">
                                <h4>@table.TableName</h4>
                                <table class="table table-condensed table-hover table-bordered table-striped">
                                    <thead>
                                        <tr>
                                            @for (int i = 0; i < table.Columns.Count; i++)
                                            {
                                                <th>@table.Columns[i].ColumnName</th>
                                            }
                                        </tr>
                                    </thead>
                                    <tbody>
                                        @for (int i = 0; i < table.Rows.Count; i++)
                                        {
                                            <tr>
                                                @for (int j = 0; j < table.Columns.Count; j++)
                                                {
                                                    <td>@table.Rows[i][j].ToString()</td>
                                                }
                                            </tr>
                                        }
                                    </tbody>
                                </table>
                            </div>
                        }
                    }
                </div>
            </div>
        </div>
    </div>
</div>
@section scripts{
    <script>
        $(document).ready(function () {
            // File input
            $('.inputfile').each(function () {
                var $input = $(this),
                    $label = $input.next('label'),
                    labelVal = $label.html();

                $input.on('change', function (e) {
                    var fileName = '';

                    if (this.files && this.files.length > 1)
                        fileName = (this.getAttribute('data-multiple-caption') || '').replace('{count}', this.files.length);
                    else if (e.target.value)
                        fileName = e.target.value.split('\\').pop();

                    if (fileName)
                        $label.find('span').html(fileName);
                    else
                        $label.html(labelVal);
                });
            });
        });
    </script>
}