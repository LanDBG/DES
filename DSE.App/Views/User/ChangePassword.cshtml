@model DSE.DataAccess.Models.UserChangePassword
@using DSE.App.Helpers

@{
    ViewBag.Title = "Change Password";
}
<div class="main-content container-fluid">
    @if (ViewBag.Edit != null)
    {
        if (ViewData.ModelState.IsValid)
        {
            <div role="alert" class="alert alert-success alert-dismissible">
                <button type="button" data-dismiss="alert" aria-label="Close" class="close"><span aria-hidden="true" class="mdi mdi-close"></span></button><span class="icon mdi mdi-check"></span><strong>Good!</strong> Update successful.
            </div>
        }
        else
        {
            <div role="alert" class="alert alert-danger alert-dismissible">
                <button type="button" data-dismiss="alert" aria-label="Close" class="close"><span aria-hidden="true" class="mdi mdi-close"></span></button><span class="icon mdi mdi-close-circle-o"></span><strong>Update unsuccessful!</strong> @Html.ValidationSummary(true, "", new { })
            </div>
        }
    }

    @using (Html.BeginForm("ChangePassword", "User", FormMethod.Post, new { @class = "form-horizontal group-border-dashed" }))
    {
        @Html.AntiForgeryToken()
        @Html.HiddenFor(model => model.Updated)
        @Html.HiddenFor(model => model.UserName)

        <div class="form-group">
            @Html.LabelFor(model => model.OldPassword, htmlAttributes: new { @class = "control-label col-md-3" })
            <div class="col-sm-6">
                @Html.EditorFor(model => model.OldPassword, new { htmlAttributes = new { @class = "form-control" } })
                @Html.MyValidationMessageFor(model => model.OldPassword)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.NewPassword, htmlAttributes: new { @class = "control-label col-md-3" })
            <div class="col-sm-6">
                @Html.EditorFor(model => model.NewPassword, new { htmlAttributes = new { @class = "form-control" } })
                @Html.MyValidationMessageFor(model => model.NewPassword)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.ConfirmNewPassword, htmlAttributes: new { @class = "control-label col-md-3" })
            <div class="col-sm-6">
                @Html.EditorFor(model => model.ConfirmNewPassword, new { htmlAttributes = new { @class = "form-control" } })
                @Html.MyValidationMessageFor(model => model.ConfirmNewPassword)
            </div>
        </div>

        <div class="form-group">
            <div class="col-sm-6 col-md-offset-3">
                <input type="submit" value="Update" class="btn btn-primary" />
            </div>
        </div>
    }
    </div>
